---
published: true
title: 구글 클라우드 플랫폼 #1
layout: post
---
웹 서비스를 위한 클라우드 플랫폼을 알려달라고 하면 단연 'AWS'가 먼저 떠오를 것이다. 그 이유는 멋쟁이 사자처럼 3기 활동을 하면서 처음 알게된 클라우드 컴퓨팅 서비스였기 때문이다. 그리고 현재, 멋쟁이 사자처럼 3기 활동을 마치고 1년 정도가 지난 지금 스타트업 회사에서 웹 서비스를 개발하고 있다. 

지금 일하는 스타트업의 웹 서비스는 그 서버 구성이 구글 클라우드 플랫폼을 통해 구성되어있다. AWS를 한 번 경험하고 나니 구글에서 제공하는 서비스를 이용하는 게 훨씬 수월했다. 그리고 이 글을 시작으로 웹 서비스를 개발하면서 이용한 구글 클라우드 플랫폼의 제품들을 소개하고 간단한 예제를 통해 정리할 계획이다.


## 구글 클라우드 플랫폼
구글 클라우드 플랫폼 (이하 GCP)는 구글에서 제공하는 클라우드 컴퓨팅 플랫폼이다. 위에서 말했듯이 아마존의 AWS처럼 구글은 GCP를 서비스하고 있다.  GCP는 구글 검색과 유튜브와 같은 서비스와 동일한 인프라를 제공한다. 이런 GCP 클라우드 서비스 시장에서 작년 기준 점유율 5%로 4위에 랭크되었다. [링크](http://www.itworld.co.kr/tags/51741/aws/91705)

## Case study
현재 일하고 있는 스타트업에서 제공하고 있는 웹 서비스를 다음과 같은 구조로 설계했다.

![간단한 웹 서비스 구조도](https://cloud.githubusercontent.com/assets/6007758/16329009/93032b34-3a1a-11e6-9252-3a0fb9819de7.png)

사용자가 직접 접속하여 HTML/CSS 요소들을 제공하는 Static 인스턴스가 있다. 사용자가 이 Static 서버에 접속하고 로그인과 같은 요청을 시도하면 해당 요청은 Load Balancer 통해 분산된다. 그렇게 분산된요청들을 처리하기 위한 Restful하게 설계된 인스턴스(PHP로 구현)가 있다. 그리고 데이터베이스로는 Google SQL 인스턴스가 있고 노티피케이션 처리를 위한 node.js로 구현된 서버가 돌아가는 인스턴스와 업로드와 이미지가 저장되는 Cloud Storage가 있다. 

## Compute Engine - Practice
위의 서버 구조도에 알 수 있듯이 DB, Storage, Load Balancer를 제외하고 나머지는 요소들은 인스턴스로 구성했다. 이 인스턴스는 GCP에서 Compute Engine이라는 서비스를 통해서 사용하고 관리할 수 있다. (like EC2 of AWS) 이 컴퓨트 엔진에서 제공하는 인스턴스는 상당히 다양하다. 메모리를 기준이나 CPU 성능을 기준으로 미리 정의된 가상머신 템플릿이 있고 가상머신에서 구동할 이미지도 다양한 리눅스계열과 몇 가지 윈도우 이미지를 제공한다. 물론 가상머신의 스펙과 이미지는 커스터마이징이 가능하다. 

그럼 간단하게 기본 인스턴스를 하나 생성해보겠다. 

![프로젝트 생성](https://cloud.githubusercontent.com/assets/6007758/16329360/e183e670-3a1c-11e6-9ec5-d51fe1c9bd2f.png)

구글에 로그인하고 구글 클라우드 콘솔[링크](https://console.cloud.google.com)에 접속한 뒤 프로젝트를 생성한다. 프로젝트를 생성하고 서비스를 사용하면 무료로 60일 동안 사용가능하고 금액은 300달러가 제공된다. 프로젝트를 생성하면 대쉬보드가 보이고 좌측 상단 메뉴 아이콘을 클릭하면 나오는 많은 제품 중 컴퓨트 엔진을 선택한다. 


![Compute Engine 메뉴](https://cloud.githubusercontent.com/assets/6007758/16329439/6388ad86-3a1d-11e6-852e-8f42dd0427b1.png)

컴퓨트 엔진의 메뉴 중 VM 인스턴스를 선택한다. 


![VM 인스턴스](https://cloud.githubusercontent.com/assets/6007758/16329496/f9d1942e-3a1d-11e6-8a89-620c7a40a572.png)

해당 메뉴를 선택하면 인스턴스의 목록들과 인스턴스들의 상태를 확인 할 수 있는 그래프가 화면에 보인다. 여기서 인스턴스를 생성하기 위해 상단에 인스턴스 만들기 버튼을 클릭한다.


![인스턴스 만들기 - 1](https://cloud.githubusercontent.com/assets/6007758/16329503/1acf7362-3a1e-11e6-899b-c20020c5c326.png)

인스턴스의 영역(Like Region of AWS)은 동아시아, 서부 유럽, 미국 중부, 미국 동부가 제공이 되고 미리 정의된 VM 스펙이나 이미지들을 선택할 수 있다. 여기서 VM 스펙이나 이미지들은 커스터마이징이 가능하다.


![인스턴스 만들기 - 2](https://cloud.githubusercontent.com/assets/6007758/16329656/9a386c26-3a1e-11e6-8859-31852bff45b7.png)

방화벽 메뉴에서 HTTP(S) 트래픽을 허용하고 자동화 메뉴의 시작 스크립트에 간단하게 아파치를 설치하는 bash script를 작성하면 인스턴스가 생성되면서 아파치 서버를 자동으로 구동한다.


![success](https://cloud.githubusercontent.com/assets/6007758/16329690/dfc72cd2-3a1e-11e6-91cc-3c1d4b0796c8.png)

마지막으로 하단의 만들기 버튼을 눌러 과정을 마무리하면 얼마 지나지 않아 인스턴스가 생성되고 생성된 인스턴스의 아이피 주소로 접속하면 아파치 서버가 구동되어 위와 같은 화면을 확인 할 수 있다.


## Next
이렇게 해서 간단하게 구글 클라우드 플랫폼을 소개하고 인스턴스를 만들어 봤다. 다음은 인스턴스를 묶어서 관리할 수 있는 Instance Group과 HTTP(S) 요청을 설정된 인스턴스로 분배해주는 Load Balancer에 대해서 간단히 살펴보도록 하겠다.