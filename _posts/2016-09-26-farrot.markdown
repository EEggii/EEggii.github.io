---
published: true
title: Farrot - 페이스북 봇 만들기
layout: post
---
# 1. 메신저들 사이에서 떠오르는 '봇'

  개인 모바일 디바이스의 수요 및 공급이 많아지면서 덩달아 메신저 시장도 점점 커지고 메신저의 종류도 다양해지고 있습니다. 최근 구글도 알로(Alo)라는 이름의 메신저를 출시하면서 메시지 어플리케이션 시장에 뛰어들었습니다. 이렇게 점점 더 치열해지는 메시지 어플리케이션, 메신저 시장에서 살아남기 위해서 각각의 어플리케이션은 더 좋은 기능, 더 많은 기능을 제공하고 있습니다. 
  
  
  이러한 메시지 어플리케이션들은 기본 기능 뿐만 아니라 챗봇(chat bot)을 이용한 다양한 플러그인 또는 부가 기능들을 제공하고 있습니다. 상품 검색 및 조회, 주문부터 장소 및 시간 예약, 결제까지. 메시지 어플리케이션에서 아주 다양한 일들을 할 수 있습니다. 이러한 기능들은 '봇'이라는 기술을 사용합니다. 봇은 사람처럼 행동하는 프로그램입니다. 이 프로그램은 사용자가 입력한 내용을 분석하고 그 내용에 대해 적당한 정보를 제공하는 역할을 수행합니다. 사실상 메시지 어플리케이션은 이러한 봇을 만들 수 있는 환경을 제공합니다. 메시지 내용이 오고 갈 때의 프로토콜이나 데이터 형식을 정의하거나 webhook과 같은 메시지 처리 API들을 지원하는 것입니다. 이런 API를 활용하여 기업들은 해당 메시지 어플리케이션을 이용하는 고객을 대상으로 마케팅을 하기 위해 봇을 만들어 별도의 어플리케이션없이 더 나은 사용자 경험을 제공하는 것입니다. 하지만 이 '봇'이라는 기술만으로는 사용자를 쉽게 만족시킬 수는 없습니다. 자연어 처리, 머신 러닝과 같은 기술을 활용하여 챗봇은 좀 더 똑똑한 봇이 될 수 있고 사용자에게 더 정확한 정보를 제공할 수 있을 것입니다. 
  
  그래서 이 봇이라는 기술을 경험하기 위해 직접 만들어 볼 것입니다. 한국에서 가장 많이 사용하는 메시지 어플리케이션인 카카오톡 봇을 만들어 볼려고 했으나 사업자에게 제공되는 옐로아이디를 통해서만 봇 API를 사용할 수 있어서 첫 봇은 페이스북 메신저 플랫폼을 이용하여 만들었습니다.
  
  
  
# 2. 페이스북 봇 만들기 ([Getting Started](https://developers.facebook.com/docs/messenger-platform/quickstart)을 따라서)

  페이스북 봇을 만들기 위해서는 우선 페이지를 만들어야 합니다. 페이스북 페이지는 로그인 후 좌측 메뉴에서 페이지 만들기 메뉴를 선택하여 만들 수 있습니다. 적당한 이름과 분류를 선택하여 페이지를 만들고 서버를 구성하겠습니다
  
  서버는 Cloud9([https://c9.io](https://c9.io))를 이용하여 구성하겠습니다.
  
![create project with clone](https://cloud.githubusercontent.com/assets/6007758/18822823/d003cdea-83ee-11e6-8323-4d41c82f77ea.png)

  프로젝트 생성 시 node.js 플랫폼을 선택하고 페이스북 메신저 예제 저장소를 클론합니다. 서버를 실행하기 전에 서버 설정을 해야합니다. config 폴더 안에 default.json 파일이 있습니다. 이 파일을 열면 4가지 항목을 확인 할 수 있습니다.
  
![configs.json](https://cloud.githubusercontent.com/assets/6007758/18822881/5269ff7a-83ef-11e6-9214-a4f6aa33f292.png)

  appSecret은 페이스북 **앱 대시보드**, pageAccessToken은 메신저 설정의 **토큰 생성 항목**에서, validationToken은 **도구 및 지원 -> Access Token Tool 메뉴**에서 **App Token**이란 이름으로 확인 할 수 있습니다. 마지막으로 serverURL은 **생성한 node.js 프로젝트를 실행하면 제공되는 도메인**을 넣어주면 됩니다. 이 설정 값들을 넣기 위해서 페이스북 앱을 만들어 보도록 하겠습니다.
  
  페이스북 개발자 사이트([https://developers.facebook.com](https://developers.facebook.com))에 들어가서 로그인 후 앱을 하나 생성합니다. 앱을 생성한 뒤 좌측 메뉴에서 제품 추가 항목을 선택한 뒤 메신저 항목의 시작하기 버튼을 클릭합니다. 토큰 생성 항목에서 방금 생성한 페이지를 선택하면 페이지 액세스 토큰을 확인 할 수 있습니다. 이 외에도 defalut.json 파일에 넣을 값들을 위에서 언급한 것처럼 각 토큰 및 시크릿, URL 경로를 입력하고 서버를 실행합니다. (*서버 실행하기 전에 npm을 이용하여 몇 가지 노드 모듈을 설치해야 할 수도 있습니다. 모듈에러가 아니라면 default.json 파일 내용이 제대로 적용되었는지 확인하시길 바랍니다.*)
  
  
![setting webhook](https://cloud.githubusercontent.com/assets/6007758/18823000/6fc2a274-83f0-11e6-9df1-43ab39c9e65d.png)

  다시 메신저 설정 페이지로 돌아와 Webhooks 항목의 'Webhooks 설정' 버튼을 클릭합니다. 각각의 항목에 다음과 같은 값을 입력합니다. 콜백 URL에는 C9 프로젝트 실행 시 제공되는 도메인에 '/webhook' 추가한 경로를 적어줍니다. (예: https://fbbot-skidmarkii-c9users.io/webhook) 그 다음, 확인 토큰은 서버 설정파일의 validationToken 값을 넣어줍니다. 받아보기 필드에서는 *message_deliveries*, *messages*, *messaging_optins*, *messaging_postbacks* 항목들을 선택합니다. 정상적으로 적용이 됐다면 Webhooks 항목에 초록색 체크 아이콘을 확인 할 수 있습니다. 그리고 받아보는 페이지를 방금 만든 페이지로 설정합니다. (*또는 curl을 이용하여 확인할 수 있습니다.* **요청: curl -X POST "https://graph.facebook.com/v2.6/me/subscribed_apps?access_token=[PAGE_ACCESS_TOKEN]" 응답: {"success": true}**)
  
  
  
# 3. First Bot - 'F'arrot
  
![Farrot](https://cloud.githubusercontent.com/assets/6007758/18823037/d4067c38-83f0-11e6-816d-5b0c18da33db.png)

  이제 봇을 만나보겠습니다. 봇과 연동한 페이지에 들어가서 메시지를 보내면 응답을 받을 수 있습니다. 메신저 어플리케이션에서도 똑같이 동작하는 것을 확인할 수 있습니다. 이 페이스북 페이지 봇은 사용자가 보낸 메시지 내용을 그대로 응답하는 앵무새(?) 같은 봇입니다. 그리고 image, gif와 같은 특정 키워드를 입력하면 프로젝트에 저장된 컨텐츠들을 전송합니다.
  
  
# 4. Next
  페이스북에서 제공하는 예제를 통해서 아주 간단한 봇을 만들어봤습니다. 다음은 생활코딩의 힙챗 봇 만들기 과정을 통해 봇을 만드는 과정을 진행해보도록 하겠습니다. 생활코딩에서는 서버사이드 언어가 php이지만 이번 페이스북 봇에 이어 언어적인 측면의 맥락(?)을 유지하기 위해 계속 node.js로 진행하겠습니다.
